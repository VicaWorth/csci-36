<h1 class="py-2 pt-5">Department Learning Outcomes Discussion Summary</h1>
<form novalidate="novalidate" name="aform" action="/dis-form" method="POST" onsubmit="return validateForm()">
  <div class="form-group">
    <label id="form-header-text" for="fullName" class="text-secondary">FULL NAME</label>
    <input name="username" type="text" class="form-control" id="fullName" placeholder="John Smith">
  </div>
  <div class="form-row">
    <div class="col">
      <label for="email" class="text-secondary" id="form-header-text">EMAIL</label>
      <input name="email" type="email" class="form-control" placeholder="jsmith@email.com">
    </div>
    <div class="col">
      <label for="email" class="text-secondary" id="form-header-text">DATE ASSESSED</label>
      <input name="date" type="date" class="form-control" value="<%= date %>">
    </div>
  </div>
  <div class="form-group mt-4">
      <label class="text-secondary" id="form-header-text" for="presentInput">CONTRIBUTERS</label>
      <input name="contributers" type="text" class="form-control" id="presentInput" placeholder="John Smith, Jane Doe, etc..." />
  </div>
    <div>
      <label class="text-secondary mt-2" for="programs" id="form-header-text">PROGRAM</label>
      <select class="form-select mb-3" aria-label=".form-select-lg example" name="program" onchange="((event)=>{
        let value = event.target.value
        let length = '<%=courkey.length%>'
        let keyCour = '<%=courkey%>'.split(',')
        let fCourses = '<%=courses%>'.split(',')
        let fSlos = '<%- slos %>'.split('+') 
        let renderArr = []
        let elArr = []

        // get slos parsed and ready
        let renderSlos = []
        for (let i = 0; i < fSlos.length-1; i++) {
          let temp = fSlos[i].split('.') 
          if (temp[0].charAt(0) == ',') {
            temp[0] = temp[0].slice(1)
          }
          temp = temp.filter((elem) => {
            return elem != ''
          })
          renderSlos.push(temp)
        }

        // show header for selection
        document.querySelector('.alert.alert-info').style.display = 'block'
        document.querySelector('.bg-light.radio-select').style.display = 'block'
        // slos for current value
        let currentSlos = renderSlos[value-1]
        let progLosArr = makeSloCheckboxes(currentSlos)
        let progLosElement = document.querySelector('.plo-options-wrapper')
        progLosElement.style.display = 'block'
        while (progLosElement.firstChild) {
          progLosElement.removeChild(progLosElement.firstChild)
        }
        let progHeader = document.createElement('h5')
        progHeader.innerHTML = 'Program Learning Outcomes'
        progHeader.classList.add('mb-4')
        progHeader.classList.add('mt-4')
        progLosElement.appendChild(progHeader)
        for (let i = 0; i < progLosArr.length; i++) {
          progLosArr[i].firstChild.setAttribute('name', 'programopt')
          progLosArr[i].firstChild.onclick = showTextArea
          progLosElement.appendChild(progLosArr[i])
        }
        
        // getting all courses
        for (let i = 0; i < length; i++) {
          if (keyCour[i] === value) {
            renderArr.push(fCourses[i])
          }  
        }
        // creating options for courses
        for (let i = 0; i < renderArr.length; i++) {
          let newOption = document.createElement('option')
          newOption.innerHTML = renderArr[i]
          elArr.push(newOption)
        }
        // remove placeholder
        let parent = document.getElementById('progs-courses')
        let label = document.querySelector('.text-secondary.coursehide')
        parent.style.display = 'block'
        label.style.display = 'unset'
        while (parent.firstChild) {
          parent.removeChild(parent.firstChild)
        }
        let chooseOption = document.createElement('option')
        chooseOption.value = ''
        chooseOption.setAttribute('selected', '')
        chooseOption.innerHTML = 'Choose...'
        parent.appendChild(chooseOption)

        // append options to course select box
        for (let i = 0; i < elArr.length; i++) {
          parent.appendChild(elArr[i])
        }
      })(event)">
          <option value="" selected>Choose...</option>
        <% for (let i = 0; i < programs.length; i++) { %>
           <option id="<%= i+1 %>" value="<%= i+1 %>"><%= programs[i] %> (<%= types[i] %>)</option>
       <% } %>
      </select>
    </div>
    <label class="text-secondary coursehide" for="courses" id="form-header-text" style="display:none">COURSE</label>
    <select class="form-select mb-3" id="progs-courses" style="display:none" name="course" onchange="((event) => {
      let value = event.target.value
      let fClos = `<%- clos %>`
      fClos = fClos.split('+')
      
      for (let i = 0; i < fClos.length; i++) {
        if (fClos[i].search(value) !== -1) {
          console.log(fClos[i])
          fClos = fClos[i]
        }
      }

      fClos = fClos.slice(fClos.indexOf(',') + 1);
      fClos = fClos.split('.')
      fClos.pop()
      let cloElemsArr = makeSloCheckboxes(fClos)
      let courseLosElement = document.querySelector('.clo-options-wrapper')
      courseLosElement.style.display = 'unset'

      while (courseLosElement.firstChild) {
        courseLosElement.removeChild(courseLosElement.firstChild)
      }
      let courseHeader = document.createElement('h5')
      courseHeader.innerHTML = 'Course Learning Outcomes'
      courseHeader.classList.add('mb-4')
      courseHeader.classList.add('mt-4')
      courseLosElement.appendChild(courseHeader)
      for (let i = 0; i < cloElemsArr.length; i++) {
        cloElemsArr[i].firstChild.setAttribute('name', 'courseopt')
        cloElemsArr[i].firstChild.onclick = showTextArea
        courseLosElement.appendChild(cloElemsArr[i])
      }
      console.log(fClos)

    })(event)">
    </select>
    
    <div class="alert alert-info mt-4" role="alert" style="display:none">
      SELECT 1 PLO AND(OR) 1 CLO
    </div>

    <div class="bg-light radio-select" id="radio-lister" style="display:none">
      <div class="plo-options-wrapper" style="display:none"> 
        <h6><b>Program Learning Outcomes</b></h6>
      </div>

      <div class="clo-options-wrapper" style="display:none"> 
        <h6><b>Course Learning Outcomes</b></h6>
      </div>
    </div>

    <div class="textarea-wrapper" style="display:none">
      <div class="form-group mt-4">
          <h5>Strategies</h5>
          <p class="mb-0">
              Discuss how the findings above will be used to inform practice. For
              example: planned improvements in individual courses; department-wide
              trainings; altering the assessment; or moving the focus to a
              different learning outcome.
          </p>
      </div>
      <div class="form-group">
          <label for="strategiesInput"></label>
          <textarea name="strategies" type="text" class="form-control mb-0" id="strategiesInput" placeholder="..."></textarea>
      </div>
      <div class="form-group">
          <h5>Resources</h5>
          <p>
              What resources (if any) are needed to make the changes outlined
              above? What resources (if any) does the department need to help
              students meet course and/or program outcomes.
          </p>
      </div>
      <div class="form-group">
          <label for="needsInput"></label>
          <textarea name="resources" type="text" class="form-control" id="resourcesInput" placeholder="..."></textarea>
      </div>
      <div class="form-group">
          <h5 class="mb-4">Notes</h5>
          <textarea name="notes" type="text" class="form-control" id="notesInput" placeholder="..."></textarea>
      </div>
    </div>
    <div class="form-group mt-4">
      <button type="submit" class="btn btn-warning" disabled>Submit</button>
    </div>
</form>

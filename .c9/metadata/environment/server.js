{"filter":false,"title":"server.js","tooltip":"/server.js","undoManager":{"mark":6,"position":6,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":57},"action":"remove","lines":["import scrapeProgramList from './butte_scraper/index.js';"],"id":1,"ignore":true},{"start":{"row":0,"column":0},"end":{"row":0,"column":23},"action":"insert","lines":["// Bringing in librarys"]},{"start":{"row":2,"column":49},"end":{"row":4,"column":42},"action":"insert","lines":["","","// Bringing in models, modules, and routes"]},{"start":{"row":5,"column":30},"end":{"row":5,"column":31},"action":"insert","lines":[" "]},{"start":{"row":5,"column":55},"end":{"row":26,"column":10},"action":"remove","lines":["","","const app = express();","const port = process.env.PORT || 3000; // switched to port 3000 because 5000 is always inuse on macOS.","","app.use(expressLayouts);","app.set(\"view engine\", \"ejs\");","","import dotenv from 'dotenv'","dotenv.config();","","// WARNING: scraper does not handle data gathering gracefully... temporary hack below.","// ","// uncomment if database is empty(first run)","// comment out after database is populated(after first run)","","await scrapeProgramList();","","","// Home Route","app.get(\"/\", (req, res) => {","    res.re"]},{"start":{"row":5,"column":55},"end":{"row":21,"column":11},"action":"insert","lines":[" // models from DB for read/write","import { fetchHtml, Program } from './scraper.js';","import Database from './database.js';","import indexRoute from './routes/index.js';","import departmentRoute from './routes/departments.js';","import programRoute from './routes/programs.js';","import formRoute from './routes/form.js';","","// bind express class to 'server' and define port (process.env.PORT is for non-local deployment)","const server = express();","const PORT = process.env.PORT || 3000;","","// ejs middleware and setup","server.use(expressLayouts);","server.set(\"view engine\", \"ejs\");","","// Route ha"]},{"start":{"row":21,"column":13},"end":{"row":21,"column":14},"action":"insert","lines":["l"]},{"start":{"row":21,"column":16},"end":{"row":31,"column":31},"action":"remove","lines":["(\"index\", { title: \"SLO Tracker - Home\" });","});","","// All departments","app.get(\"/departments\", async (req, res) => {","    const allDepartments =  await departments.findAll({order: ['dept_name'],raw: true});","    res.render(\"all_departments\", { title: \"SLO Tracker - All Departments\", departments: allDepartments });","});","","// Single department","app.get(\"/departments/:dept_id\""]},{"start":{"row":21,"column":16},"end":{"row":30,"column":18},"action":"insert","lines":["s in middleware, every time there is a request it will pick the right route based on req","// follow import trail and you can see what they do when they get hit","// if not a handled route then 404 ","server.use(indexRoute);","server.use(departmentRoute);","server.use(programRoute);","server.use(formRoute);","","// start nodejs server, It will listen for requests on PORT.","server.listen(PORT"]},{"start":{"row":30,"column":27},"end":{"row":30,"column":35},"action":"remove","lines":["req, res"]},{"start":{"row":31,"column":8},"end":{"row":43,"column":59},"action":"remove","lines":["t department = await departments.findOne({","        where: {","            dept_id: req.params.dept_id","        },","        raw: true","    });","    if (department == null) {","        res.status(404).json('ERROR: No department found with that id')","    } else {","        console.log(\"Found: \" + department.dept_name)","        res.render(\"single_department\", {","            department: department,","            title: `SLO Tracker - ${department.dept_name}`,"]},{"start":{"row":31,"column":8},"end":{"row":39,"column":89},"action":"insert","lines":["ole.log(`Listening on Port: ${PORT}`);","","    // to run the scraper or not to run the scraper...","    try {","      const progDB = await programs.findAndCountAll();","      const deptDB = await departments.findAndCountAll();","    } catch(error) {","        // side effects like crazy because this is a web scraper...","        // awaits are simply stating 'we need this request to come back before proceding'"]},{"start":{"row":40,"column":8},"end":{"row":40,"column":11},"action":"remove","lines":["});"]},{"start":{"row":41,"column":4},"end":{"row":44,"column":5},"action":"remove","lines":["}","});","","// Al"]},{"start":{"row":41,"column":4},"end":{"row":41,"column":18},"action":"insert","lines":["    // Get htm"]},{"start":{"row":41,"column":20},"end":{"row":41,"column":21},"action":"remove","lines":["p"]},{"start":{"row":41,"column":20},"end":{"row":41,"column":21},"action":"insert","lines":["f"]},{"start":{"row":41,"column":23},"end":{"row":43,"column":0},"action":"remove","lines":["grams","app.get(\"/programs\", async (req, res) => {",""]},{"start":{"row":41,"column":23},"end":{"row":42,"column":4},"action":"insert","lines":["m year to scrape","    "]},{"start":{"row":42,"column":14},"end":{"row":42,"column":15},"action":"remove","lines":["a"]},{"start":{"row":42,"column":14},"end":{"row":42,"column":20},"action":"insert","lines":["butteA"]},{"start":{"row":42,"column":30},"end":{"row":43,"column":55},"action":"remove","lines":[" =  await programs.findAll({raw: true});","    res.render(\"all_programs\", { title: \"SLO Tracker - "]},{"start":{"row":42,"column":30},"end":{"row":43,"column":17},"action":"insert","lines":["Url = \"https://programs.butte.edu/ProgramList/All/12/false\"","        let butte"]},{"start":{"row":43,"column":20},"end":{"row":43,"column":21},"action":"remove","lines":[" "]},{"start":{"row":43,"column":28},"end":{"row":48,"column":0},"action":"remove","lines":["\", programs: allPrograms });","});","","// Single program","app.get(\"/programs/:program_id\", async (req, res) => {",""]},{"start":{"row":43,"column":28},"end":{"row":46,"column":4},"action":"insert","lines":["Html = await fetchHtml(butteAllProgramsUrl);","","        // Program class used to get infoMatrix of all data","    "]},{"start":{"row":46,"column":14},"end":{"row":46,"column":15},"action":"remove","lines":["p"]},{"start":{"row":46,"column":14},"end":{"row":46,"column":20},"action":"insert","lines":["butteP"]},{"start":{"row":46,"column":29},"end":{"row":68,"column":17},"action":"remove","lines":["await programs.findOne({","        where: {","            prog_id: req.params.program_id","        },","        raw: true","    });","    if (program == null) {","        res.status(404).json('ERROR: No program found with that id')","    } else {","        console.log(\"Found: \" + program.prog_name)","        res.render(\"single_program\", {","            program: program,","            title: `SLO Tracker - ${program.prog_name}`,","        });","    }","});","","// Discussion Form","app.get(\"/dis-form\", async (req, res) => {","    res.render(\"dis-form\", { title: \"SLO Tracker - Form\"});","});","","app.listen(port, "]},{"start":{"row":46,"column":29},"end":{"row":52,"column":53},"action":"insert","lines":["new Program(butteAllProgramsHtml);","        const programsMatrix = await butteProgram.GetAndOrderInfoMatrix();","","        // Database class to populate models in database","        const butteDatabase = new Database(programsMatrix);","        await butteDatabase.insertPrograms();","        await butteDatabase.insertDepartments().then("]},{"start":{"row":53,"column":0},"end":{"row":53,"column":6},"action":"insert","lines":["      "]},{"start":{"row":53,"column":22},"end":{"row":53,"column":61},"action":"remove","lines":["`Listening: http://localhost:${port}`);"]},{"start":{"row":53,"column":22},"end":{"row":55,"column":5},"action":"insert","lines":["'Database is full, Scrape Complete!')","        });","    }"]}],[{"start":{"row":42,"column":89},"end":{"row":42,"column":90},"action":"insert","lines":[";"],"id":2}],[{"start":{"row":52,"column":60},"end":{"row":52,"column":61},"action":"insert","lines":[";"],"id":3}],[{"start":{"row":52,"column":60},"end":{"row":52,"column":61},"action":"remove","lines":[";"],"id":4}],[{"start":{"row":53,"column":59},"end":{"row":53,"column":60},"action":"insert","lines":[";"],"id":5}],[{"start":{"row":42,"column":89},"end":{"row":42,"column":90},"action":"remove","lines":[";"],"id":6,"ignore":true},{"start":{"row":53,"column":59},"end":{"row":53,"column":60},"action":"remove","lines":[";"]}],[{"start":{"row":5,"column":41},"end":{"row":5,"column":50},"action":"insert","lines":["database/"],"id":7,"ignore":true},{"start":{"row":6,"column":9},"end":{"row":6,"column":10},"action":"remove","lines":["f"]},{"start":{"row":6,"column":9},"end":{"row":6,"column":10},"action":"insert","lines":["F"]},{"start":{"row":7,"column":32},"end":{"row":7,"column":41},"action":"insert","lines":["/database"]},{"start":{"row":43,"column":41},"end":{"row":43,"column":42},"action":"remove","lines":["f"]},{"start":{"row":43,"column":41},"end":{"row":43,"column":42},"action":"insert","lines":["F"]},{"start":{"row":47,"column":14},"end":{"row":47,"column":22},"action":"remove","lines":["programs"]},{"start":{"row":47,"column":14},"end":{"row":47,"column":18},"action":"insert","lines":["info"]},{"start":{"row":47,"column":46},"end":{"row":47,"column":67},"action":"remove","lines":["GetAndOrderInfoMatrix"]},{"start":{"row":47,"column":46},"end":{"row":47,"column":52},"action":"insert","lines":["Scrape"]},{"start":{"row":50,"column":43},"end":{"row":50,"column":51},"action":"remove","lines":["programs"]},{"start":{"row":50,"column":43},"end":{"row":50,"column":47},"action":"insert","lines":["info"]},{"start":{"row":51,"column":28},"end":{"row":51,"column":29},"action":"remove","lines":["i"]},{"start":{"row":51,"column":28},"end":{"row":51,"column":29},"action":"insert","lines":["I"]},{"start":{"row":51,"column":34},"end":{"row":52,"column":45},"action":"remove","lines":["Programs();","        await butteDatabase.insertDepartments"]},{"start":{"row":51,"column":34},"end":{"row":51,"column":38},"action":"insert","lines":["Data"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":34,"column":9},"end":{"row":34,"column":9},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1665506672159,"hash":"393d2a91f7351f057201d9253a353e9d099bb407"}